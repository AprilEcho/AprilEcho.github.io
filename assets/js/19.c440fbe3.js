(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{408:function(e,t,a){"use strict";a.r(t);var r=a(0),v=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("p",[a("code",[e._v("Performance")]),e._v("  一个在前端开发领域中，无法被忽视的存在，如果我们的开发是一个满足需求就可以的产品，那么可能就用不到它；但是如果我们想对我们的这个产品，做一个极致的优化，那么  "),a("code",[e._v("Performance")]),e._v("  是一个很好的选择，也是一个不容忽视的选择。")]),e._v(" "),a("h2",{attrs:{id:"performance-工具-和-api-的优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-工具-和-api-的优缺点"}},[e._v("#")]),e._v(" Performance 工具 和 api 的优缺点")]),e._v(" "),a("h3",{attrs:{id:"performance-工具-优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-工具-优点"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance 工具")]),e._v("  优点：")]),e._v(" "),a("ul",[a("li",[e._v("可视化图形界面")]),e._v(" "),a("li",[e._v("每毫秒做的事情")]),e._v(" "),a("li",[e._v("文件的执行加载的顺序")]),e._v(" "),a("li",[e._v("每毫秒界面展示的效果")]),e._v(" "),a("li",[e._v("每个方法执行的顺序和时间（由下至上）")]),e._v(" "),a("li",[e._v("倒置的事件火焰图（由下至上）")]),e._v(" "),a("li",[e._v("数据总结")])]),e._v(" "),a("h3",{attrs:{id:"performance-工具-缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-工具-缺点"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance 工具")]),e._v("  缺点：")]),e._v(" "),a("ul",[a("li",[e._v("无法查看某一个区间之内的运行时间")]),e._v(" "),a("li",[e._v("无法查看  "),a("code",[e._v("js")]),e._v("  堆的大小使用情况及限制")]),e._v(" "),a("li",[e._v("无法查看页面是刷新还是加载，重定向次数")]),e._v(" "),a("li",[e._v("无法查看什么时间开始做的性能测试")]),e._v(" "),a("li",[e._v("可以在资源缓存已满的时候进行回调处理")]),e._v(" "),a("li",[e._v("设置浏览器应在其性能条目缓冲区中保存的最大性能条目对象数")])]),e._v(" "),a("h3",{attrs:{id:"performance-api-优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-api-优点"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance api")]),e._v("  优点：")]),e._v(" "),a("ul",[a("li",[e._v("完全弥补了  "),a("code",[e._v("Performance 工具")]),e._v("  的缺点，还可以让我们通过数据的方式去知道具体的时间")])]),e._v(" "),a("h3",{attrs:{id:"performance-api-缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-api-缺点"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance api")]),e._v("  缺点：")]),e._v(" "),a("ul",[a("li",[e._v("无法像  "),a("code",[e._v("Performance 工具")]),e._v("  那样图形化的去查看数据信息")])]),e._v(" "),a("p",[e._v("大致的介绍了一下工具和 api 的优缺点，其实很明显的可以看出来，它们是相辅相成的，其实在一般的工具当中，我们会使用其中的某一个去进行性能的优化，但是对于一个想要进行真正的，彻底性的性能优化，还是需要两者之间的配合，去进行更高效、更系统、更全面的优化。")]),e._v(" "),a("h2",{attrs:{id:"performance-工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-工具"}},[e._v("#")]),e._v(" Performance 工具")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6cf1f82f767344d6836a48f15579a6cf~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这就是  "),a("code",[e._v("Performance 工具")]),e._v("  的界面。")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35340953dede41a6aa7bebf2be7445ec~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("ul",[a("li",[e._v("上下箭头，就是用来上传和下载每一次性能检测报告的；")]),e._v(" "),a("li",[a("code",[e._v("no recordings")]),e._v("  就是每一次的检测报告，可以根据每一次的检测报告，去进行性能优化的对比；")]),e._v(" "),a("li",[a("code",[e._v("Screenshots")]),e._v("  是用来查看在每个时间段界面的变化；")]),e._v(" "),a("li",[a("code",[e._v("Memory")]),e._v("  存储调用栈的大小，在不同时间段的不同大小；")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fa35f91690ba43a7a09bf92750ed42f9~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Disable Javascript samples")]),e._v("  禁用  "),a("code",[e._v("javascript")]),e._v("  调用栈，在后面讲解  "),a("code",[e._v("Main")]),e._v("  部分进行详解；")]),e._v(" "),a("li",[a("code",[e._v("Enable advanced paint instrumentation (slow)")]),e._v("  记录渲染事件的细节；")]),e._v(" "),a("li",[a("code",[e._v("Network")]),e._v("  用来修改检测在不同的网络环境下，界面的渲染；")]),e._v(" "),a("li",[a("code",[e._v("CPU")]),e._v("  用来查看电脑的性能问题；")])]),e._v(" "),a("p",[e._v("到这里呢，简单的介绍了一下上面几个按钮真正的意义，下面结合可视化的图表在配上面这些按钮进行性能的检测：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/bc2e1c78a6e14dcfae361551597745a2~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这个性能检测是对掘金网站 --\x3e 我的主页做的性能优化检测截图")]),e._v(" "),a("h3",{attrs:{id:"第一部分-概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一部分-概览"}},[e._v("#")]),e._v(" 第一部分：概览")]),e._v(" "),a("p",[e._v("这里最主要是整体的界面渲染的时候，每个时间段执行的事件顺序，通过上图，我们就能知道我们每个时间段（精确到毫秒）都做了什么，当鼠标放上去的时候，我们还可以大图的形式去查看我们每个时间段界面的渲染情况：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c448442f92804119af65e263980d945b~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("当在这里通过点击滑动到某一位置松开的时候，可以查看某一个区间直接的一个渲染情况")]),e._v(" "),a("h3",{attrs:{id:"第二部分-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二部分-network"}},[e._v("#")]),e._v(" 第二部分：Network")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c1400e5f577a473ea6117ec45a8555a6~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[a("code",[e._v("Network")]),e._v("  这里我们可以看出来，我们资源加载的一个顺序情况，什么时间加载了什么资源，通过这里，我们更直观的可以知道，"),a("strong",[e._v("资源是并行加载的")])]),e._v(" "),a("h3",{attrs:{id:"第三部分-frames"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三部分-frames"}},[e._v("#")]),e._v(" 第三部分：Frames")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/54ba13ab59ee42b0b625853a9a72ee94~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[a("code",[e._v("Frames")]),e._v("  这里，其实就是查看我们在什么时间，界面发生了改变，它和第一部分的区别就是在界面没有改变的时候，它是不做记录的，但是概览部分是会做记录的")]),e._v(" "),a("h3",{attrs:{id:"第四部分-interactions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四部分-interactions"}},[e._v("#")]),e._v(" 第四部分： Interactions")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e027945e3e87466c872fc59c9e17f3a7~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("在我看过的文章里，很少看到会有这部分，是因为在不适用一些交互动作的时候，是不会有这部分的功能的，从这里我们看到了掘金使用了一些动画的动作")]),e._v(" "),a("h3",{attrs:{id:"第五部分-timings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五部分-timings"}},[e._v("#")]),e._v(" 第五部分：Timings")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1c8286aa37044b21be12a190cf388d4d~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这张图不是掘金官网的，因为在项目打包后，就没有对应的事件调用，所以在线上经过打包的网站，是看不到这部分的")]),e._v(" "),a("h3",{attrs:{id:"第六部分-main"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六部分-main"}},[e._v("#")]),e._v(" 第六部分：Main")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7b6b36a8f87e49728f3b691a6fb43e3a~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这里就是  "),a("code",[e._v("Performance 工具")]),e._v("  当中比较核心的一部分，俗称  "),a("strong",[e._v("火焰图")]),e._v(" , 这里是一个由下而上的事件执行图，你可以简单的理解成上面这是一个汇总")]),e._v(" "),a("h3",{attrs:{id:"第七部分-raster"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第七部分-raster"}},[e._v("#")]),e._v(" 第七部分：Raster")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6e4f73c35464068bc4cc50e3359ea8b~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("通过这里，我们知道掘金官网，在前端部分一共使用了几条线程")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("复制代码\n这里有一个知识点，这里是指浏览器渲染的线程，而不是js的线程，特此声明一下，怕被有的同学拿js单线程来喷我😹\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"第八部分-gpu"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第八部分-gpu"}},[e._v("#")]),e._v(" 第八部分： GPU")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1144a4ea85284773aeb54d798607ee1e~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这里我们可以很清楚的看出来，网站在什么时间有  "),a("code",[e._v("GPU")]),e._v("  加速")]),e._v(" "),a("h3",{attrs:{id:"第九部分-taskschedulerforegroundblockingworker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第九部分-taskschedulerforegroundblockingworker"}},[e._v("#")]),e._v(" 第九部分：taskSchedulerForegroundBlockingWorker")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c72339e1fa144badb556bf4dfc3bd05e~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("任务计划程序前台阻止工作程序，这里我用的很少，也是第一次见，等的我明确一下这里是做什么的，在进行更新，如果有知道的朋友，也可以评论告诉我，我及时进行改进")]),e._v(" "),a("h3",{attrs:{id:"第十部分-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十部分-memory"}},[e._v("#")]),e._v(" 第十部分：Memory")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1032b308e5924b1099f6ba3d0802fa39~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("上面有提到  "),a("code",[e._v("Memory")]),e._v("  选项，在勾选后，就会显示该事件折线图，通过该图，可以看出我们在不同的时间段，不同事件的执行情况")]),e._v(" "),a("h3",{attrs:{id:"第十一部分-性能检测详情"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第十一部分-性能检测详情"}},[e._v("#")]),e._v(" 第十一部分：性能检测详情")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0adcd676ad834206a0c4b1121f2e45fc~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("上面有 4 个标签："),a("code",[e._v("Summary（性能摘要）")]),e._v(" 、 "),a("code",[e._v("Bottom-Up（事件列表，由下至上，对应 Main 火焰图）")]),e._v(" 、 "),a("code",[e._v("Call Tree（每个事件的子项信息）")]),e._v(" 、 "),a("code",[e._v("Event log（事件日志）")])]),e._v(" "),a("p",[e._v("接下来，我们依次详解")]),e._v(" "),a("h4",{attrs:{id:"summary-性能摘要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#summary-性能摘要"}},[e._v("#")]),e._v(" Summary（性能摘要）")]),e._v(" "),a("p",[e._v("其实我们一看就明白，它是一个用来统计在我们检测性能的时间范围内，都做了哪些事情：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Loading")]),e._v(" ：加载时间")]),e._v(" "),a("li",[a("code",[e._v("Scripting")]),e._v(" ：js 计算时间")]),e._v(" "),a("li",[a("code",[e._v("Rendering")]),e._v(" ：渲染时间")]),e._v(" "),a("li",[a("code",[e._v("Painting")]),e._v(" ：绘制时间")]),e._v(" "),a("li",[a("code",[e._v("Other")]),e._v(" ：其他时间")]),e._v(" "),a("li",[a("code",[e._v("Idle")]),e._v(" ：浏览器闲置时间")])]),e._v(" "),a("h4",{attrs:{id:"bottom-up-事件列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bottom-up-事件列表"}},[e._v("#")]),e._v(" Bottom-Up（事件列表）")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd6dd0743f004dd7b372d84777c6988e~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这里和  "),a("code",[e._v("Main")]),e._v("  里面看见的，其实是一个对应着的关系，从这里，我们可以看见所有的事件列表，还有每个事件的  "),a("code",[e._v("Self Time（自己调用的时间）")]),e._v(" 、 "),a("code",[e._v("Total Time（总调用时间，包括子项调用时间）")]),e._v(" 、 "),a("code",[e._v("Activity（行为，包括调用该事件的位置）")])]),e._v(" "),a("h4",{attrs:{id:"call-tree-事件子项信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call-tree-事件子项信息"}},[e._v("#")]),e._v(" Call Tree（事件子项信息）")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11c14465e31142cabc3d9161213ebbf4~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("其实这里和  "),a("code",[e._v("Bottom-Up")]),e._v("  部分是一样的，就不做太多的说明了，大家看一下就知道了")]),e._v(" "),a("h4",{attrs:{id:"event-log-事件日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-log-事件日志"}},[e._v("#")]),e._v(" Event Log（事件日志）")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9d550949f6294382897ff1c29b5e09bc~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这里比前面的  "),a("code",[e._v("Bottom-Up")]),e._v("  和  "),a("code",[e._v("Call Tree")]),e._v("  相比，多了一个  "),a("code",[e._v("Start Time")]),e._v("  属性，这个属性其实就是开始的时间，从什么时间开始执行的什么事件")]),e._v(" "),a("p",[e._v("到这里，有关  "),a("code",[e._v("Performance 工具")]),e._v("  的介绍，就到了这里了，如果有什么解释不清楚的，或者有问题的地方，还请大家评论指出，我做及时的更正")]),e._v(" "),a("p",[e._v("下面，给大家介绍  "),a("code",[e._v("Performance Api")])]),e._v(" "),a("h2",{attrs:{id:"performance-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-api"}},[e._v("#")]),e._v(" Performance API")]),e._v(" "),a("p",[a("code",[e._v("Performance")]),e._v("  用来获取当前页面的性能信息，它和  "),a("code",[e._v("Performance 工具")]),e._v("  的区别在上面我们已经写出来了，就不在这里啰嗦了")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("复制代码\n注意：除了以下指出的情况外，该接口及其成员在 Web Worker 中可用。\n此外，还需注意，performance 的创建和衡量都是同一环境下的。\n即，如果你在主线程（或者其他 worker）中创建了一个 performance，那么它在另外的 worker 线程中是不可用的；反之亦然。\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("接下来，我们先介绍一下  "),a("code",[e._v("Performance API")]),e._v("  的属性：")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-navigation-操作相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-navigation-操作相关"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.navigation（操作相关）")])]),e._v(" "),a("p",[e._v("该属性是一个对象，有两个属性值，分别是  "),a("code",[e._v("redirectCount（重定向次数）")]),e._v(" 、 "),a("code",[e._v("type（操作的类型）")]),e._v("：")]),e._v(" "),a("h4",{attrs:{id:"redirectcount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirectcount"}},[e._v("#")]),e._v(" "),a("code",[e._v("redirectCount")])]),e._v(" "),a("p",[e._v("该属性值为几，就说明了当前页面重定向了多少次；")]),e._v(" "),a("h4",{attrs:{id:"type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[e._v("#")]),e._v(" "),a("code",[e._v("type")])]),e._v(" "),a("p",[a("code",[e._v("type(0)")]),e._v("：当前页面是通过点击链接，书签和表单提交，或者脚本操作，或者在 url 中直接输入地址;")]),e._v(" "),a("p",[a("code",[e._v("type(1)")]),e._v("：点击刷新页面按钮或者通过 Location.reload()方法显示的页面；")]),e._v(" "),a("p",[a("code",[e._v("type(2)")]),e._v("：页面通过历史记录和前进后退访问时；")]),e._v(" "),a("p",[a("code",[e._v("type(255)")]),e._v("：任何其他方式")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-timing-延迟相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-timing-延迟相关"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.timing（延迟相关）")])]),e._v(" "),a("p",[e._v("当前页面中与时间相关的信息：")]),e._v(" "),a("h4",{attrs:{id:"navigationstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navigationstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("navigationStart")])]),e._v(" "),a("p",[e._v("从同一个浏览器的上一个页面卸载  "),a("code",[e._v("unload")]),e._v("  结束时的时间戳（精确到毫秒）")]),e._v(" "),a("h4",{attrs:{id:"unloadeventstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unloadeventstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("unloadEventStart")])]),e._v(" "),a("p",[a("code",[e._v("unload")]),e._v("  事件执行时的时间戳。如果没有上一个页面，或者如果先前的页面或所需的重定向之一不是同一个来源, 这个值会返回 0")]),e._v(" "),a("h4",{attrs:{id:"unloadeventend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unloadeventend"}},[e._v("#")]),e._v(" "),a("code",[e._v("unloadEventEnd")])]),e._v(" "),a("p",[a("code",[e._v("unload")]),e._v("  事件执行完的时间戳。如果没有上一个页面，或者如果先前的页面或所需的重定向之一不是同一个来源, 这个值会返回 0")]),e._v(" "),a("h4",{attrs:{id:"redirectstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirectstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("redirectStart")])]),e._v(" "),a("p",[e._v("第一个 HTTP 重定向开始时得时间戳。如果没有上一个页面，或者如果先前的页面或所需的重定向之一不是同一个来源, 这个值会返回 0")]),e._v(" "),a("h4",{attrs:{id:"redirectend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redirectend"}},[e._v("#")]),e._v(" "),a("code",[e._v("redirectEnd")])]),e._v(" "),a("p",[e._v("最后一个 HTTP 重定向完成时（也就是说是 HTTP 响应的最后一个字节直接被收到的时间）的时间戳")]),e._v(" "),a("h4",{attrs:{id:"fetchstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetchstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("fetchStart")])]),e._v(" "),a("p",[e._v("表征了浏览器准备好使用 HTTP 请求来获取(fetch)文档的时间戳。这个时间点会在检查任何应用缓存之前")]),e._v(" "),a("h4",{attrs:{id:"domainlookupstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domainlookupstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("domainLookupStart")])]),e._v(" "),a("p",[e._v("表征了域名查询开始的时间戳。如果使用了持续连接，或者这个信息存储到了缓存或者本地资源上，这个值将和  "),a("code",[e._v("PerformanceTiming.fetchStart")]),e._v("  一致")]),e._v(" "),a("h4",{attrs:{id:"domainlookupend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domainlookupend"}},[e._v("#")]),e._v(" "),a("code",[e._v("domainLookupEnd")])]),e._v(" "),a("p",[e._v("表征了域名查询结束的时间戳。如果使用了持续连接，或者这个信息存储到了缓存或者本地资源上，这个值将和  "),a("code",[e._v("PerformanceTiming.fetchStart")]),e._v("  一致")]),e._v(" "),a("h4",{attrs:{id:"connectstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connectstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("connectStart")])]),e._v(" "),a("p",[e._v("返回 HTTP 请求开始向服务器发送时的时间戳。如果使用持久连接，则返回值等同于  "),a("code",[e._v("fetchStart")]),e._v("  属性的值")]),e._v(" "),a("h4",{attrs:{id:"connectend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connectend"}},[e._v("#")]),e._v(" "),a("code",[e._v("connectEnd")])]),e._v(" "),a("p",[e._v("返回浏览器与服务器之间的连接建立时的时间戳。如果建立的是持久连接，则返回值等同于  "),a("code",[e._v("fetchStart")]),e._v("  属性的值。连接建立指的是所有握手和认证过程全部结束")]),e._v(" "),a("h4",{attrs:{id:"secureconnectionstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#secureconnectionstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("secureConnectionStart")])]),e._v(" "),a("p",[e._v("返回浏览器与服务器开始安全链接的握手时的时间戳。如果当前网页不要求安全连接，则返回 0")]),e._v(" "),a("h4",{attrs:{id:"requeststart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requeststart"}},[e._v("#")]),e._v(" "),a("code",[e._v("requestStart")])]),e._v(" "),a("p",[e._v("返回浏览器向服务器发出 HTTP 请求时（或开始读取本地缓存时）的时间戳")]),e._v(" "),a("h4",{attrs:{id:"responsestart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#responsestart"}},[e._v("#")]),e._v(" "),a("code",[e._v("responseStart")])]),e._v(" "),a("p",[e._v("返回浏览器从服务器收到（或从本地缓存读取）第一个字节时的时间戳。如果传输层在开始请求之后失败并且连接被重开，该属性将会被数制成新的请求的相对应的发起时间")]),e._v(" "),a("h4",{attrs:{id:"responseend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#responseend"}},[e._v("#")]),e._v(" "),a("code",[e._v("responseEnd")])]),e._v(" "),a("p",[e._v("返回浏览器从服务器收到（或从本地缓存读取，或从本地资源读取）最后一个字节时（如果在此之前 HTTP 连接已经关闭，则返回关闭时）的时间戳")]),e._v(" "),a("h4",{attrs:{id:"domloading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domloading"}},[e._v("#")]),e._v(" "),a("code",[e._v("domLoading")])]),e._v(" "),a("p",[e._v("返回当前网页 DOM 结构开始解析时（即  "),a("code",[e._v("Document.readyState")]),e._v("  属性变为  "),a("code",[e._v("loading")]),e._v(" 、相应的  "),a("code",[e._v("readystatechange")]),e._v("  事件触发时）的时间戳")]),e._v(" "),a("h4",{attrs:{id:"dominteractive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dominteractive"}},[e._v("#")]),e._v(" "),a("code",[e._v("domInteractive")])]),e._v(" "),a("p",[e._v("返回当前网页 DOM 结构结束解析、开始加载内嵌资源时（即  "),a("code",[e._v("Document.readyState")]),e._v("  属性变为  "),a("code",[e._v("interactive")]),e._v(" 、相应的  "),a("code",[e._v("readystatechange")]),e._v("  事件触发时）的时间戳")]),e._v(" "),a("h4",{attrs:{id:"domcontentloadedeventstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloadedeventstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("domContentLoadedEventStart")])]),e._v(" "),a("p",[e._v("返回当解析器发送  "),a("code",[e._v("DOMContentLoaded")]),e._v("  事件，即所有需要被执行的脚本已经被解析时的时间戳")]),e._v(" "),a("h4",{attrs:{id:"domcontentloadedeventend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domcontentloadedeventend"}},[e._v("#")]),e._v(" "),a("code",[e._v("domContentLoadedEventEnd")])]),e._v(" "),a("p",[e._v("返回当所有需要立即执行的脚本已经被执行（不论执行顺序）时的时间戳")]),e._v(" "),a("h4",{attrs:{id:"domcomplete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#domcomplete"}},[e._v("#")]),e._v(" "),a("code",[e._v("domComplete")])]),e._v(" "),a("p",[e._v("返回当前文档解析完成，即  "),a("code",[e._v("Document.readyState")]),e._v("  变为  "),a("code",[e._v("complete")]),e._v("  且相对应的  "),a("code",[e._v("readystatechange")]),e._v("  被触发时的时间戳")]),e._v(" "),a("h4",{attrs:{id:"loadeventstart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loadeventstart"}},[e._v("#")]),e._v(" "),a("code",[e._v("loadEventStart")])]),e._v(" "),a("p",[e._v("返回该页面下，"),a("code",[e._v("load")]),e._v("  事件被发送时的时间戳。如果这个事件还未被发送，它的值将会是 0")]),e._v(" "),a("h4",{attrs:{id:"loadeventend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#loadeventend"}},[e._v("#")]),e._v(" "),a("code",[e._v("loadEventEnd")])]),e._v(" "),a("p",[e._v("返回当  "),a("code",[e._v("load")]),e._v("  事件结束，即加载事件完成时的时间戳。如果这个事件还未被发送，或者尚未完成，它的值将会是 0")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-memory-js堆相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-memory-js堆相关"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.memory（js堆相关）")])]),e._v(" "),a("p",[e._v("js 堆有关的信息：")]),e._v(" "),a("h4",{attrs:{id:"jsheapsizelimit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsheapsizelimit"}},[e._v("#")]),e._v(" "),a("code",[e._v("jsHeapSizeLimit")])]),e._v(" "),a("p",[e._v("js 堆大小限制")]),e._v(" "),a("h4",{attrs:{id:"totaljsheapsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#totaljsheapsize"}},[e._v("#")]),e._v(" "),a("code",[e._v("totalJSHeapSize")])]),e._v(" "),a("p",[e._v("js 堆总大小")]),e._v(" "),a("h4",{attrs:{id:"usedjsheapsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usedjsheapsize"}},[e._v("#")]),e._v(" "),a("code",[e._v("usedJSHeapSize")])]),e._v(" "),a("p",[e._v("使用了 js 堆的大小")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-timeorigin-性能检测开始时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-timeorigin-性能检测开始时间"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.timeOrigin（性能检测开始时间）")])]),e._v(" "),a("p",[e._v("这个属性返回的是性能测量开始时的时间的高精度时间戳，"),a("code",[e._v("number")]),e._v("  类型")]),e._v(" "),a("p",[a("code",[e._v("Performance")]),e._v("  还有一个事件：")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-onresourcetimingbufferfull-性能缓存区已满时回调"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-onresourcetimingbufferfull-性能缓存区已满时回调"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.onresourcetimingbufferfull（性能缓存区已满时回调）")])]),e._v(" "),a("p",[e._v("这个事件当浏览器的资源时间性能缓冲区已满时会触发")]),e._v(" "),a("p",[e._v("下面介绍一下  "),a("code",[e._v("Performance")]),e._v("  对象的方法：")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-clearmarks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-clearmarks"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.clearMarks()")])]),e._v(" "),a("p",[e._v("将给定的 mark 从浏览器的性能输入缓冲区中移除")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-clearmeasures"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-clearmeasures"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.clearMeasures()")])]),e._v(" "),a("p",[e._v("将给定的 measure 从浏览器的性能输入缓冲区中")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-clearresourcetimings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-clearresourcetimings"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.clearResourceTimings()")])]),e._v(" "),a("p",[e._v("从浏览器的性能数据缓冲区中移除所有  "),a("code",[e._v("entryType")]),e._v("  是  "),a("code",[e._v("resource")]),e._v("  的  "),a("code",[e._v("performance entries")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-getentries-performanceentryfilteroptions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-getentries-performanceentryfilteroptions"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.getEntries(PerformanceEntryFilterOptions)")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a286aadfa94141f7b3cd3c8a62137ef5~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("h4",{attrs:{id:"performanceentryfilteroptions-参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performanceentryfilteroptions-参数"}},[e._v("#")]),e._v(" "),a("code",[e._v("PerformanceEntryFilterOptions")]),e._v("  参数")]),e._v(" "),a("p",[e._v("可选参数，该参数是一个对象，可接受三个属性：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v("： "),a("code",[e._v("performance entry")]),e._v("  的名字")]),e._v(" "),a("li",[a("code",[e._v("entryType")]),e._v("："),a("code",[e._v("entry")]),e._v("  类型. 合法的  "),a("code",[e._v("entry")]),e._v("  类型可以从  "),a("code",[e._v("PerformanceEntry.entryType")]),e._v("  方法获取")]),e._v(" "),a("li",[a("code",[e._v("initiatorType")]),e._v("：初始化资源的类型，例如："),a("code",[e._v("xmlhttprequest")]),e._v(" 、 "),a("code",[e._v("other")]),e._v(" 、 "),a("code",[e._v("script")])])]),e._v(" "),a("h4",{attrs:{id:"performance-getentries-返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-getentries-返回值"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.getEntries")]),e._v("  返回值")]),e._v(" "),a("p",[a("code",[e._v("Performance.getEntries(PerformanceEntryFilterOptions)")]),e._v("  返回值数组成员按  "),a("code",[e._v("PerformanceEntry.startTime")]),e._v("  时间顺序排列")]),e._v(" "),a("p",[e._v("如果没有符合  "),a("code",[e._v("filter")]),e._v("  条件的对象，那么返回空数组. 如果不带任何参数，返回全部  "),a("code",[e._v("entries")])]),e._v(" "),a("p",[e._v("由于返回值是一个数组，所以我们接下来讲解一下每一个数组项的每一个属性的意思：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("connectEnd")]),e._v("：连接结束时间")]),e._v(" "),a("li",[a("code",[e._v("connectStart")]),e._v("：连接开始时间")]),e._v(" "),a("li",[a("code",[e._v("decodedBodySize")]),e._v("：解码的主体大小")]),e._v(" "),a("li",[a("code",[e._v("domComplete")]),e._v("："),a("code",[e._v("dom")]),e._v("  渲染完成时间")]),e._v(" "),a("li",[a("code",[e._v("domContentLoadedEventEnd")]),e._v("："),a("code",[e._v("dom")]),e._v("  内容加载事件结束时间")]),e._v(" "),a("li",[a("code",[e._v("domContentLoadedEventStart")]),e._v("："),a("code",[e._v("dom")]),e._v("  内容加载事件开始时间")]),e._v(" "),a("li",[a("code",[e._v("domInteractive")]),e._v("："),a("code",[e._v("dom")]),e._v("  交互时间")]),e._v(" "),a("li",[a("code",[e._v("domainLookupEnd")]),e._v("：域查找结束时间")]),e._v(" "),a("li",[a("code",[e._v("domainLookupStart")]),e._v("：域查找开始时间")]),e._v(" "),a("li",[a("code",[e._v("duration")]),e._v("：事件耗时")]),e._v(" "),a("li",[a("code",[e._v("encodedBodySize")]),e._v("：编码主体大小")]),e._v(" "),a("li",[a("code",[e._v("entryType")]),e._v("：资源输入类型")]),e._v(" "),a("li",[a("code",[e._v("fetchStart")]),e._v("：获取资源开始时间")]),e._v(" "),a("li",[a("code",[e._v("initiatorType")]),e._v("：发起人类型")]),e._v(" "),a("li",[a("code",[e._v("loadEventEnd")]),e._v("：加载事件结束时间")]),e._v(" "),a("li",[a("code",[e._v("loadEventStart")]),e._v("：加载事件开始时间")]),e._v(" "),a("li",[a("code",[e._v("name")]),e._v("：这里一般就是当前请求的  "),a("code",[e._v("url")]),e._v("  的地址")]),e._v(" "),a("li",[a("code",[e._v("nextHopProtocol")]),e._v("：下一个跳转协议")]),e._v(" "),a("li",[a("code",[e._v("redirectCount")]),e._v("：重定向次数")]),e._v(" "),a("li",[a("code",[e._v("redirectEnd")]),e._v("：重定向开始时间，如果没有重定向，值为 0")]),e._v(" "),a("li",[a("code",[e._v("redirectStart")]),e._v("：重定向结束时间，如果没有重定向，值为 0")]),e._v(" "),a("li",[a("code",[e._v("requestStart")]),e._v("：请求开始时间")]),e._v(" "),a("li",[a("code",[e._v("responseEnd")]),e._v("：响应结束时间")]),e._v(" "),a("li",[a("code",[e._v("responseStart")]),e._v("：响应开始时间")]),e._v(" "),a("li",[a("code",[e._v("secureConnectionStart")]),e._v("：安全连接开始时间")]),e._v(" "),a("li",[a("code",[e._v("serverTiming")]),e._v("：服务器时间")]),e._v(" "),a("li",[a("code",[e._v("startTime")]),e._v("：开始时间")]),e._v(" "),a("li",[a("code",[e._v("transferSize")]),e._v("：传递大小")]),e._v(" "),a("li",[a("code",[e._v("type")]),e._v("：该事件的类型")]),e._v(" "),a("li",[a("code",[e._v("unloadEventEnd")]),e._v("：卸载事件结束时间")]),e._v(" "),a("li",[a("code",[e._v("unloadEventStart")]),e._v("：卸载事件开始时间")]),e._v(" "),a("li",[a("code",[e._v("workerStart")]),e._v("："),a("code",[e._v("worker")]),e._v("  开始时间")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-mark-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-mark-name"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.mark(name)")])]),e._v(" "),a("p",[e._v("根据给出  "),a("code",[e._v("name")]),e._v("  值，在浏览器的性能输入缓冲区中创建一个相关的时间戳")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-measure-name-startmark-endmark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-measure-name-startmark-endmark"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.measure(name, startMark, endMark)")])]),e._v(" "),a("p",[e._v("这里接收三个参数：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v("：测量的名字")]),e._v(" "),a("li",[a("code",[e._v("startMark")]),e._v("：测量的开始标志名字（也可以是  "),a("code",[e._v("PerformanceTiming")]),e._v("  属性的名称）")]),e._v(" "),a("li",[a("code",[e._v("endMark")]),e._v("：测量的结束标志名字（也可以是  "),a("code",[e._v("PerformanceTiming")]),e._v("  属性的名称）")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-getentriesbyname-name-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-getentriesbyname-name-type"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.getEntriesByName(name, type)")])]),e._v(" "),a("p",[e._v("这里接收两个参数：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("name")]),e._v("：测量的名字")]),e._v(" "),a("li",[a("code",[e._v("type")]),e._v("：测量的类型（"),a("code",[e._v("frame, navigation")]),e._v(" 、"),a("code",[e._v("resource")]),e._v(" 、 "),a("code",[e._v("mark")]),e._v(" 、"),a("code",[e._v("measure")]),e._v(" 、"),a("code",[e._v("paint")]),e._v("）")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-getentriesbytype-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-getentriesbytype-type"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.getEntriesByType(type)")])]),e._v(" "),a("p",[e._v("接收一个参数，"),a("code",[e._v("type")]),e._v("  同上面  "),a("code",[e._v("Performance.getEntriesByName(name, type)")]),e._v("  的  "),a("code",[e._v("type")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-now"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-now"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.now()")])]),e._v(" "),a("p",[e._v("返回一个表示从性能测量时刻开始经过的毫秒数")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-setresourcetimingbuffersize-maxsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-setresourcetimingbuffersize-maxsize"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.setResourceTimingBufferSize(maxSize)")])]),e._v(" "),a("p",[e._v("设置浏览器应在其性能条目缓冲区中保存的最大性能条目对象数")]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"performance-tojson"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-tojson"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance.toJSON()")])]),e._v(" "),a("p",[e._v("返回  "),a("code",[e._v("Performance")]),e._v("  对象的  "),a("code",[e._v("JSON")]),e._v("  对象")]),e._v(" "),a("hr"),e._v(" "),a("p",[a("code",[e._v("Performance API")]),e._v("  的介绍也差不多了，浏览器的兼容性也是很不错的：")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da52eb73e9c64d9b8994a9329dd82e35~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("基本上在我们项目当中去做性能检测是没有问题的，毕竟我们是肯定不能把有关性能检测的代码打包到项目当中")]),e._v(" "),a("h3",{attrs:{id:"performance-api-的简单使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance-api-的简单使用"}},[e._v("#")]),e._v(" "),a("code",[e._v("Performance API 的简单使用")])]),e._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d5c820b7ff7c4a6593e860934f4aad04~tplv-k3u1fbpfcp-zoom-1.image",alt:""}})]),e._v(" "),a("p",[e._v("这是我写的一个小 demo ，大致的意思：")]),e._v(" "),a("p",[e._v("就是我们在定时器执行前，添加了个标记  "),a("code",[e._v("measure-start")]),e._v("；")]),e._v(" "),a("p",[e._v("在定时器执行后，又添加了个标记  "),a("code",[e._v("measure-end")]),e._v("；")]),e._v(" "),a("p",[e._v("测量一下两个标记之间的开始时间和持续时间  "),a("code",[e._v("measure-list")]),e._v("；")]),e._v(" "),a("p",[e._v("最后清除所有  "),a("code",[e._v("marks")]),e._v("  的标志位和  "),a("code",[e._v("measures")]),e._v("  的标志位；")]),e._v(" "),a("p",[e._v("从这个小 demo 我们就能看出来它的实用性和方便性，从这里我们就可以看出来，"),a("code",[e._v("Performance API")]),e._v("  可以横跨很多个方法，去检测它的调用时间，而  "),a("code",[e._v("Performance 工具")]),e._v("  就没有办法做到这一点")]),e._v(" "),a("p",[e._v("这就是我所说的相辅相成的关键点所在")])])}),[],!1,null,null,null);t.default=v.exports}}]);